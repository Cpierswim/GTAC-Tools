<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Countdown Timer Test</title>
    <style style="text/css">
        .lcdstyle
        {
            /*Example CSS to create LCD countdown look*/
            background-color: black;
            color: lime;
            font: bold 18px MS Sans Serif;
            padding: 3px;
        }
        
        .lcdstyle sup
        {
            /*Example CSS to create LCD countdown look*/
            font-size: 80%;
        }
    </style>
    <style type="text/css"><!--
        #c1 {display:block;margin:0px auto;background-color:#fff;padding:0;border:none;}
        body {border:none;margin:0px;padding:0px;overflow:hidden;background-color:#fff;}
        object{display:block;margin:0;padding:0;}
        #t td,#r1,#r2 {font-weight:bold;white-space:nowrap;cursor:default;font-family:Verdana,Arial,Helvetica,serif;font-size:16.6pt;}
        #r1{color:#f00;}
        #r1.p{color:#000;}
        #r2{color:#f00;}
        #r2.p{color:#000;}
        #t td {color:#f00;}
        #t.p td {color:#000;}
        #t .ct td{text-align:center;}
        #t .cr td{text-align:center;}
        #t .cl td{text-align:center;font-size:8.3pt;}
        --></style>
    <script type="text/javascript">

        function cdLocalTime(container, servermode, offsetMinutes, targetdate, debugmode) {
            if (!document.getElementById || !document.getElementById(container)) return
            this.container = document.getElementById(container)
            var servertimestring = (servermode == "server-php") ? '<? print date("F d, Y H:i:s", time())?>' : (servermode == "server-ssi") ? '<!--#config timefmt="%B %d, %Y %H:%M:%S"--><!--#echo var="DATE_LOCAL" -->' : '<%= Now() %>'
            this.localtime = this.serverdate = new Date()
            this.targetdate = new Date(targetdate)
            this.debugmode = (typeof debugmode != "undefined") ? 1 : 0
            this.timesup = false
            this.localtime.setTime(this.serverdate.getTime() + offsetMinutes * 60 * 1000) //add user offset to server time
            this.updateTime()
        }

        cdLocalTime.prototype.updateTime = function () {
            var thisobj = this
            this.localtime.setSeconds(this.localtime.getSeconds() + 1)
            setTimeout(function () { thisobj.updateTime() }, 1000) //update time every second
        }

        cdLocalTime.prototype.displaycountdown = function (baseunit, functionref) {
            this.baseunit = baseunit
            this.formatresults = functionref
            this.showresults()
        }

        cdLocalTime.prototype.showresults = function () {
            var thisobj = this
            var debugstring = (this.debugmode) ? "<p style=\"background-color: #FCD6D6; color: black; padding: 5px\"><big>Debug Mode on!</big><br /><b>Current Local time:</b> " + this.localtime.toLocaleString() + "<br />Verify this is the correct current local time, in other words, time zone of count down date.<br /><br /><b>Target Time:</b> " + this.targetdate.toLocaleString() + "<br />Verify this is the date/time you wish to count down to (should be a future date).</p>" : ""

            var timediff = (this.targetdate - this.localtime) / 1000 //difference btw target date and current date, in seconds
            if (timediff < 0) { //if time is up
                this.timesup = true
                this.container.innerHTML = debugstring + this.formatresults()
                return
            }
            var oneMinute = 60 //minute unit in seconds
            var oneHour = 60 * 60 //hour unit in seconds
            var oneDay = 60 * 60 * 24 //day unit in seconds
            var dayfield = Math.floor(timediff / oneDay)
            var hourfield = Math.floor((timediff - dayfield * oneDay) / oneHour)
            var minutefield = Math.floor((timediff - dayfield * oneDay - hourfield * oneHour) / oneMinute)
            var secondfield = Math.floor((timediff - dayfield * oneDay - hourfield * oneHour - minutefield * oneMinute))
            if (this.baseunit == "hours") { //if base unit is hours, set "hourfield" to be topmost level
                hourfield = dayfield * 24 + hourfield
                dayfield = "n/a"
            }
            else if (this.baseunit == "minutes") { //if base unit is minutes, set "minutefield" to be topmost level
                minutefield = dayfield * 24 * 60 + hourfield * 60 + minutefield
                dayfield = hourfield = "n/a"
            }
            else if (this.baseunit == "seconds") { //if base unit is seconds, set "secondfield" to be topmost level
                var secondfield = timediff
                dayfield = hourfield = minutefield = "n/a"
            }
            this.container.innerHTML = debugstring + this.formatresults(dayfield, hourfield, minutefield, secondfield)
            setTimeout(function () { thisobj.showresults() }, 1000) //update results every second
        }

        /////CUSTOM FORMAT OUTPUT FUNCTIONS BELOW//////////////////////////////

        //Create your own custom format function to pass into cdLocalTime.displaycountdown()
        //Use arguments[0] to access "Days" left
        //Use arguments[1] to access "Hours" left
        //Use arguments[2] to access "Minutes" left
        //Use arguments[3] to access "Seconds" left

        //The values of these arguments may change depending on the "baseunit" parameter of cdLocalTime.displaycountdown()
        //For example, if "baseunit" is set to "hours", arguments[0] becomes meaningless and contains "n/a"
        //For example, if "baseunit" is set to "minutes", arguments[0] and arguments[1] become meaningless etc

        //1) Display countdown using plain text
        function formatresults() {
            if (this.timesup == false) {//if target date/time not yet met
                var displaystring = "<span style='background-color: #CFEAFE'>" + arguments[1] + " hours " + arguments[2] + " minutes " + arguments[3] + " seconds</span> left until launch time"
            }
            else { //else if target date/time met
                var displaystring = "Launch time!"
            }
            return displaystring
        }

        //2) Display countdown with a stylish LCD look, and display an alert on target date/time
        function formatresults2() {
            if (this.timesup == false) { //if target date/time not yet met

                document.getElementById("cd").innerHTML = arguments[0];
                document.getElementById("ch").innerHTML = addLeadingZero(arguments[1]);
                document.getElementById("cm").innerHTML = addLeadingZero(arguments[2]);
                document.getElementById("cs").innerHTML = addLeadingZero(arguments[3]);
            }
            else { //else if target date/time met
                var displaystring = "" //Don't display any text
                alert("Launch time!") //Instead, perform a custom alert
            }
            return ""
        }

        function addLeadingZero(number) {

            if (number < 10)
                return "0" + number;

            return number;
        }

    </script>
</head>
<body>
    <div id="cdcontainer">
    </div>
    <table border="0" cellpadding="0" cellspacing="0" id="c2">
        <tr>
            <td id="c1">
                <div style="text-align: center;">
                    <div id="r1">
                        Countdown to Omaha</div>
                    <div id="r2">
                        June 2012</div>
                    <table id="t" border="0" cellpadding="0" cellspacing="0" style="margin: 0 auto;">
                        <tr class="cr">
                            <td id="cd">
                                361
                            </td>
                            <td>
                                :
                            </td>
                            <td id="ch">
                                00
                            </td>
                            <td>
                                :
                            </td>
                            <td id="cm">
                                41
                            </td>
                            <td>
                                :
                            </td>
                            <td id="cs">
                                59
                            </td>
                        </tr>
                        <tr class="cl">
                            <td id="ld">
                                Day
                            </td>
                            <td>
                            </td>
                            <td id="lh">
                                Hr
                            </td>
                            <td>
                            </td>
                            <td id="lm">
                                Min
                            </td>
                            <td>
                            </td>
                            <td id="ls">
                                Sec
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
    </table>
    <script type="text/javascript">
        //cdLocalTime("ID_of_DIV_container", "server_mode", LocaltimeoffsetMinutes, "target_date", "opt_debug_mode")
        //cdLocalTime.displaycountdown("base_unit", formatfunction_reference)

        //Note: "launchdate" should be an arbitrary but unique variable for each instance of a countdown on your page:

        var launchdate = new cdLocalTime("cdcontainer", "server-asp", 0, "June 25, 2012 11:00:00")
        launchdate.displaycountdown("days", formatresults2)
    </script>
</body>
</html>
